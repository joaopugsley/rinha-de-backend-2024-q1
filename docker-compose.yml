version: '3.8'

services:
  database:
    hostname: database
    image: postgres:16-alpine
    platform: linux/amd64
    environment:
      POSTGRES_USER: rinha
      POSTGRES_PASSWORD: rinha
      POSTGRES_DB: rinha
    ports:
      - "5432:5432"
    networks:
      - rinha
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "0.40"
          memory: "150MB"

  api01: &api
    hostname: api01
    build:
      context: .
    platform: linux/amd64
    restart: unless-stopped
    ports:
      - "8081:80"
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://rinha:rinha@database:5432/rinha
    networks:
      - rinha
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "150MB"

  api02:
    <<: *api
    hostname: api02
    ports:
      - "8082:80"

  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - 9999:9999
    networks:
      - rinha
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: "100MB"

networks:
  rinha:
    driver: bridge
    name: rinha
